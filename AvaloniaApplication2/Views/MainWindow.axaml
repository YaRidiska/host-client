<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:AvaloniaApplication2.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:constants="using:AvaloniaApplication2.Constants"
        xmlns:converters="using:AvaloniaApplication2.Converters"
        mc:Ignorable="d" d:DesignWidth="400" d:DesignHeight="600"
        x:Class="AvaloniaApplication2.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="Minecraft Server Manager"
        Width="325" 
        MinWidth="325"
        MaxWidth="430"
        MinHeight="435" 
        MaxHeight="750"
        Background="#1e1e1e"
        Foreground="White"
        ExtendClientAreaToDecorationsHint="True"
        ExtendClientAreaChromeHints="PreferSystemChrome"
        ExtendClientAreaTitleBarHeightHint="-1"
        SystemDecorations="Full"
        SizeToContent="Height">

  <Design.DataContext>
    <vm:MainWindowViewModel/>
  </Design.DataContext>

  <Window.Resources>
    <converters:BoolToAngleConverter x:Key="BoolToAngleConverter"/>
    <converters:BoolToDoubleConverter x:Key="BoolToDoubleConverter"/>
    <converters:BoolToGradientConverter x:Key="BoolToGradientConverter"/>
  </Window.Resources>

  <Window.Styles>
    <Style Selector="Button">
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="HorizontalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="#22c55e"/>
      <Setter Property="Foreground" Value="White"/>
    </Style>
    
    <Style Selector="Button:pointerover">
      <Setter Property="Background" Value="#34d77a"/>
      <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style Selector="Button:pressed">
      <Setter Property="Background" Value="#15803d"/>
      <Setter Property="Foreground" Value="White"/>
    </Style>
    
    <Style Selector="TitleBar">
      <Setter Property="Background" Value="#1e1e1e"/>
      <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style Selector="Button.start-button">
      <Setter Property="Width" Value="80"/>
      <Setter Property="Height" Value="80"/>
      <Setter Property="CornerRadius" Value="40"/>
      <Setter Property="FontSize" Value="18"/>
      <Setter Property="FontWeight" Value="SemiBold"/>
      <Setter Property="ClipToBounds" Value="True"/>
      <Setter Property="Background">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
            <GradientStop Offset="0" Color="#22c55e"/>
            <GradientStop Offset="1" Color="#16a34a"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="Transitions">
        <Transitions>
          <TransformOperationsTransition Property="RenderTransform" Duration="0.2"/>
        </Transitions>
      </Setter>
      <Setter Property="RenderTransform" Value="scale(1)"/>
    </Style>

    <Style Selector="Button.start-button:pointerover">
      <Setter Property="Background">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
            <GradientStop Offset="0" Color="#15803d"/>
            <GradientStop Offset="1" Color="#166534"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
      <Setter Property="RenderTransform" Value="scale(1.05)"/>
    </Style>

    <Style Selector="Button.start-button:pressed">
      <Setter Property="RenderTransform" Value="scale(0.95)"/>
      <Setter Property="Background">
        <Setter.Value>
          <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
            <GradientStop Offset="0" Color="#15803d"/>
            <GradientStop Offset="1" Color="#166534"/>
          </LinearGradientBrush>
        </Setter.Value>
      </Setter>
    </Style>

    <Style Selector="Button.start-button.running">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
                    <GradientStop Offset="0" Color="#ef4444"/>
                    <GradientStop Offset="1" Color="#dc2626"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector="Button.start-button.running:pointerover">
        <Setter Property="Background">
            <Setter.Value>
                <LinearGradientBrush StartPoint="0%,0%" EndPoint="100%,100%">
                    <GradientStop Offset="0" Color="#dc2626"/>
                    <GradientStop Offset="1" Color="#b91c1c"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector="TextBox">
        <Setter Property="Background" Value="#1e1e1e"/>
        <Setter Property="Foreground" Value="#e0e0e0"/>
        <Setter Property="CaretBrush" Value="#22c55e"/>
        <Setter Property="SelectionBrush" Value="#404040"/>
        <Setter Property="SelectionForegroundBrush" Value="White"/>
        <Setter Property="BorderBrush" Value="#454545"/>
    </Style>

    <Style Selector="TextBox:focus">
        <Setter Property="Background" Value="#262626"/>
        <Setter Property="BorderBrush" Value="#555555"/>
    </Style>

    <Style Selector="TextBox:pointerover">
        <Setter Property="Background" Value="#262626"/>
        <Setter Property="BorderBrush" Value="#555555"/>
    </Style>

    <Style Selector="Button.copy-button">
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Height" Value="24"/>
        <Setter Property="Padding" Value="4"/>
        <Setter Property="CornerRadius" Value="4"/>
    </Style>

    <Style Selector="Button.copy-button > Image">
        <Setter Property="Transitions">
            <Transitions>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
            </Transitions>
        </Setter>
        <Setter Property="RenderTransform" Value="scale(1)"/>
    </Style>

    <Style Selector="Button.copy-button:pointerover">
        <Setter Property="Background" Value="#ffffff15"/>
    </Style>

    <Style Selector="Button.copy-button:pointerover > Image">
        <Setter Property="RenderTransform" Value="scale(1.1)"/>
    </Style>

    <Style Selector="Button.copy-button:pressed > Image">
        <Setter Property="RenderTransform" Value="scale(0.9)"/>
    </Style>

    <Style Selector="Expander">
        <Setter Property="Background" Value="#2d2d2d"/>
        <Setter Property="BorderBrush" Value="#3d3d3d"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
    </Style>

    <Style Selector="Expander /template/ ToggleButton#PART_toggle">
        <Setter Property="Template">
            <ControlTemplate>
                <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="0"
                        CornerRadius="8">
                    <Grid ColumnDefinitions="*,Auto" Margin="15,12">
                        <TextBlock Text="{TemplateBinding Content}"
                                 Foreground="#e0e0e0"
                                 FontWeight="SemiBold"
                                 VerticalAlignment="Center"/>
                        <Border Grid.Column="1"
                                Background="#363636"
                                CornerRadius="4"
                                Width="24"
                                Height="24">
                            <Path Fill="#e0e0e0"
                                  Width="12"
                                  Height="12"
                                  Stretch="Uniform"
                                  HorizontalAlignment="Center"
                                  VerticalAlignment="Center"
                                  Data="M0,0 L8,8 L16,0">
                                <Path.RenderTransform>
                                    <RotateTransform Angle="{TemplateBinding IsChecked, Converter={StaticResource BoolToAngleConverter}}"/>
                                </Path.RenderTransform>
                            </Path>
                        </Border>
                    </Grid>
                </Border>
            </ControlTemplate>
        </Setter>
    </Style>

    <Style Selector="Expander:pointerover /template/ ToggleButton#PART_toggle > Border">
        <Setter Property="Background" Value="#363636"/>
    </Style>

    <Style Selector="Expander /template/ ContentPresenter#PART_ContentPresenter">
        <Setter Property="Padding" Value="0"/>
    </Style>

    <Style Selector="Expander TextBox">
        <Setter Property="SelectionBrush" Value="#404040"/>
        <Setter Property="SelectionForegroundBrush" Value="#22c55e"/>
        <Setter Property="CaretBrush" Value="#22c55e"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style Selector="Expander TextBox:pointerover">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style Selector="Expander TextBox:focus">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style Selector="Expander TextBox:pointerover /template/ Border#PART_BorderElement">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style Selector="Expander TextBox:focus /template/ Border#PART_BorderElement">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
    </Style>

    <Style Selector="Button.toggle-button">
        <Setter Property="Background">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource BoolToGradientConverter}">
                    <Binding Path="IsSubdomainLocked"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
        <Setter Property="Transitions">
            <Transitions>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
            </Transitions>
        </Setter>
        <Setter Property="RenderTransform" Value="scale(1)"/>
    </Style>

    <Style Selector="Button.toggle-button:pointerover">
        <Setter Property="RenderTransform" Value="scale(1.05)"/>
        <Setter Property="Background">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource BoolToGradientConverter}">
                    <Binding Path="IsSubdomainLocked"/>
                    <Binding Source="hover"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector="Button.toggle-button:pressed">
        <Setter Property="RenderTransform" Value="scale(0.95)"/>
        <Setter Property="Background">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource BoolToGradientConverter}">
                    <Binding Path="IsSubdomainLocked"/>
                    <Binding Source="pressed"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style Selector="Border.toast">
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="RenderTransform" Value="translateY(20px)"/>
        <Setter Property="Transitions">
            <Transitions>
                <DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
            </Transitions>
        </Setter>
    </Style>

    <Style Selector="Border.toast[IsVisible=true]">
        <Setter Property="Opacity" Value="1"/>
        <Setter Property="RenderTransform" Value="translateY(0px)"/>
    </Style>

    <Style Selector="Border.pulse-border">
        <Style.Animations>
            <Animation Duration="0:0:2" IterationCount="Infinite">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0.1"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.2"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.2"/>
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>

    <Style Selector="Border.pulse-border-reverse">
        <Style.Animations>
            <Animation Duration="0:0:2" IterationCount="Infinite">
                <KeyFrame Cue="0%">
                    <Setter Property="Opacity" Value="0"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.2"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.2"/>
                </KeyFrame>
                <KeyFrame Cue="100%">
                    <Setter Property="Opacity" Value="0.1"/>
                    <Setter Property="ScaleTransform.ScaleX" Value="1.0"/>
                    <Setter Property="ScaleTransform.ScaleY" Value="1.0"/>
                </KeyFrame>
            </Animation>
        </Style.Animations>
    </Style>
  </Window.Styles>

  <Grid>
    <Grid RowDefinitions="Auto,*,Auto">
        <Grid Grid.Row="0" Height="30"/>
        
            <StackPanel Grid.Row="1" Margin="20,5,20,5" Spacing="10">
          <Border Background="#2d2d2d" 
                  BorderBrush="#3d3d3d" 
                  BorderThickness="1" 
                  Padding="15,12,15,12" 
                  CornerRadius="8"
                  BoxShadow="0 2 4 0 #1a1a1a">
      <StackPanel Spacing="10">
              
            <Grid ColumnDefinitions="*, Auto, Auto">
          <TextBox Grid.Column="0"
                   Text="{Binding DesiredSubdomain}"
                   IsEnabled="{Binding !IsSubdomainLocked}"
                         Watermark="Поддомен"
                         MaxLength="20"
                         Focusable="True"/>
          <Button Grid.Column="1"
                      Classes="copy-button"
                      Command="{Binding GenerateSubdomainCommand}"
                      Margin="5,0"
                      ToolTip.Tip="Сгенерировать случайный поддомен">
                  <Image Source="/Assets/rand.png"
                         Width="16"
                         Height="16"/>
              </Button>
              <Button Grid.Column="2"
                      Classes="toggle-button"
                  Content="{Binding SubdomainButtonText}"
                  Command="{Binding ToggleSubdomainCommand}"
                  Width="120"
                  ToolTip.Tip="{Binding SubdomainButtonTooltip}"/>
        </Grid>
            </StackPanel>
          </Border>

          <Grid ColumnDefinitions="Auto,Auto" HorizontalAlignment="Center" Margin="0,5,0,5">
          <TextBlock Grid.Column="0"
                     Text="{Binding FullDomainName}"
                         Foreground="#b0b0b0"
                     FontStyle="Italic"
                         VerticalAlignment="Center"/>
                   
              <Button Grid.Column="1"
                      Classes="copy-button"
                      Command="{Binding CopyServerIpCommand}"
                      ToolTip.Tip="Копировать IP сервера">
                  <Image Source="/Assets/copy.png"
                         Width="16"
                         Height="16"/>
              </Button>
          </Grid>

          <Border BoxShadow="0 4 8 0 #1a1a1a"
                  HorizontalAlignment="Center"
                  Background="Transparent"
                  CornerRadius="60"
                  Margin="0,5,0,5">
            <Panel>
                <Border Classes="pulse-border"
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="40"
                        IsVisible="{Binding !IsServerRunning}">
                    <Border.RenderTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Border.RenderTransform>
                </Border>
                <Border Classes="pulse-border"
                        BorderBrush="White"
                        BorderThickness="1"
                        CornerRadius="40"
                        IsVisible="{Binding !IsServerRunning}">
                    <Border.RenderTransform>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Border.RenderTransform>
                </Border>

                <Border Classes="pulse-border-reverse"
                        BorderBrush="White"

                        BorderThickness="1"
                        CornerRadius="40"
                        IsVisible="{Binding IsServerFullyStarted}">
                    <Border.RenderTransform>
                        <ScaleTransform ScaleX="1" ScaleY="1"/>
                    </Border.RenderTransform>
                </Border>
                <Border Classes="pulse-border-reverse"
                        BorderBrush="White"
                        
                        BorderThickness="1"
                        CornerRadius="40"
                        IsVisible="{Binding IsServerFullyStarted}">
                    <Border.RenderTransform>
                        <ScaleTransform ScaleX="1.1" ScaleY="1.1"/>
                    </Border.RenderTransform>
                </Border>

                <Button Classes="start-button"
                        Classes.running="{Binding IsServerFullyStarted}"
                        Command="{Binding ToggleServerCommand}">
                    <Panel>
                        <Image Source="/Assets/play.png" 
                               Width="32" 
                               Height="32"
                               IsVisible="{Binding !IsServerRunning}"
                               HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     Margin="5,0,0,0"/>
                        
                        <Image Source="/Assets/wait.png" 
                               Width="32" 
                               Height="32"
                               IsVisible="{Binding IsServerRunning}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center">
                            <Image.IsVisible>
                                <MultiBinding Converter="{x:Static BoolConverters.And}">
                                    <Binding Path="IsServerRunning"/>
                                    <Binding Path="!IsServerFullyStarted"/>
                                </MultiBinding>
                            </Image.IsVisible>
                        </Image>
                        
                        <Image Source="/Assets/stop.png" 
                               Width="32" 
                               Height="32"
                               IsVisible="{Binding IsServerFullyStarted}"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"/>
                                
                        <Border BorderBrush="White"
                                Width="40"
                                Height="40"
                                BorderThickness="1"
                                CornerRadius="100"
                                Opacity="0.1"
                                Margin="-5"/>
                        <Border BorderBrush="White"
                                Width="60"
                                Height="60"
                                BorderThickness="1"
                                CornerRadius="100"
                                Opacity="0.05"
                                Margin="-15"/>
                    </Panel>
                </Button>
            </Panel>
          </Border>

        <TextBlock Text="{Binding StatusMessage}"
                     HorizontalAlignment="Center"
                     TextAlignment="Center"
                     TextWrapping="Wrap"
                     Margin="0,5,0,10">
          <TextBlock.Foreground>
            <Binding Path="IsSubdomainLocked">
              <Binding.Converter>
                          <vm:BoolToColorConverter TrueColor="#22c55e" FalseColor="#ef4444"/>
              </Binding.Converter>
            </Binding>
          </TextBlock.Foreground>
        </TextBlock>

          <Border Background="#2d2d2d" 
                  BorderBrush="#3d3d3d" 
                  BorderThickness="1" 
                  Padding="15" 
                  CornerRadius="8"
                  BoxShadow="0 2 4 0 #1a1a1a">
            <StackPanel Spacing="5">
             
        <ComboBox ItemsSource="{Binding AvailableVersions}"
                 SelectedItem="{Binding SelectedVersion}"
                       HorizontalAlignment="Stretch"
                       Background="#363636"
                       Foreground="White"/>
      </StackPanel>
    </Border>

          <Expander Header="Логи сервера"
                    IsVisible="{Binding ShowServerLogs}">
            <Grid RowDefinitions="*,Auto">
                <Border Grid.Row="0"
                        Background="#363636" 
                        CornerRadius="0"
                        BorderBrush="#454545"
                        BorderThickness="0,1,0,1">
                    <TextBox Text="{Binding LogText}"
                             IsReadOnly="True"
                         TextWrapping="Wrap"
                             AcceptsReturn="True"
                             Background="Transparent"
                             BorderThickness="0"
                             Height="230"
                             Padding="15,10"
                             Margin="0"
                             Foreground="#e0e0e0"
                             FontFamily="Consolas"
                             Focusable="True"/>
      </Border>
                
                <Button Grid.Row="1"
                        Classes="copy-button"
                        Command="{Binding CopyLogsCommand}"
                        HorizontalAlignment="Right"
                        Margin="0,5,15,5"
                        ToolTip.Tip="Копировать логи">
                    <StackPanel Orientation="Horizontal" Spacing="5">
                        <Image Source="/Assets/copy.png"
                               Width="16"
                               Height="16"/>
                        <TextBlock Text="Копировать"
                                  VerticalAlignment="Center"/>
                    </StackPanel>
                </Button>
            </Grid>
    </Expander>
  </StackPanel>

        <Grid Grid.Row="2" ColumnDefinitions="Auto,*,Auto" Margin="10,0,10,5">
            <TextBlock Grid.Column="0" 
                       FontSize="12"
                       VerticalAlignment="Bottom">
                <Run Text="By P" Foreground="#808080"/><Run Text="u" Foreground="#4CAF50"/><Run Text="re" Foreground="#808080"/>
            </TextBlock>

            <Button Grid.Column="2"
                    Classes="copy-button"
                    Command="{Binding OpenSettingsCommand}"
                    ToolTip.Tip="Настройки"
                    VerticalAlignment="Bottom">
                <Image Source="/Assets/settings.png"
                       Width="22"
                       Height="22"/>
            </Button>
        </Grid>
    </Grid>


    <Border Background="#22c55e"
            CornerRadius="4"
            Padding="12,8"
            HorizontalAlignment="Center"
            VerticalAlignment="Top"
            Margin="0,40,0,0"
            BoxShadow="0 2 8 0 #1a1a1a"
            IsVisible="{Binding IsToastVisible}">
        <Border.Styles>
            <Style Selector="Border">
                <Setter Property="Transitions">
                    <Transitions>
                        <DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
                        <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
                    </Transitions>
                </Setter>
            </Style>
        </Border.Styles>
        <Border.RenderTransform>
            <TransformGroup>
                <TranslateTransform Y="{Binding IsToastVisible, Converter={StaticResource BoolToDoubleConverter}, ConverterParameter=20:0}"/>
            </TransformGroup>
        </Border.RenderTransform>
        <Border.Opacity>
            <Binding Path="IsToastVisible" Converter="{StaticResource BoolToDoubleConverter}"/>
        </Border.Opacity>
        <TextBlock Text="{Binding ToastMessage}"
                   Foreground="White"
                   FontWeight="Medium"/>
    </Border>

    <Rectangle Fill="Black" 
               Opacity="0.6" 
               IsVisible="{Binding IsSettingsOpen}"
               Margin="0,30,0,0"
               >
        <Rectangle.Transitions>
            <Transitions>
                <DoubleTransition Property="Opacity" Duration="0:0:0.2"/>
            </Transitions>
        </Rectangle.Transitions>
    </Rectangle>

    <Border Background="#2d2d2d"
            BorderBrush="#3d3d3d"
            BorderThickness="1"
            CornerRadius="8"
            Width="280"
            BoxShadow="0 4 8 0 #1a1a1a"
            Margin="20,60,20,20"
            VerticalAlignment="Center"
            HorizontalAlignment="Center"
            IsVisible="{Binding IsSettingsOpen}">
        <Border.RenderTransform>
            <TranslateTransform X="0" Y="0"/>
        </Border.RenderTransform>
        <Border.Transitions>
            <Transitions>
                <TransformOperationsTransition Property="RenderTransform" Duration="0:0:0.2"/>
            </Transitions>
        </Border.Transitions>

        <Grid RowDefinitions="Auto,*">
            <Grid Grid.Row="0" 
                  ColumnDefinitions="*,Auto" 
                  Margin="15,12">
                <TextBlock Text="Настройки"
                           FontWeight="SemiBold"
                           VerticalAlignment="Center"/>
                <Button Grid.Column="1"
                        Classes="copy-button"
                        Command="{Binding CloseSettingsCommand}">
                    <Image Source="/Assets/close.png"
                           Width="22"
                           Height="22"/>
                </Button>
            </Grid>

            <StackPanel Grid.Row="1" 
                        Margin="15,0,15,15" 
                        Spacing="10">
                <Grid ColumnDefinitions="*,Auto" 
                      Margin="0,5">
                    <TextBlock Text="Показывать логи сервера"
                              VerticalAlignment="Center"/>
                    <ToggleSwitch Grid.Column="1"
                                  IsChecked="{Binding ShowServerLogs}"
                                  OnContent=""
                                  OffContent=""
                                  Margin="10,0,0,0"/>
                </Grid>

                <Grid ColumnDefinitions="*,Auto" 
                      Margin="0,5">
                    <TextBlock Text="Запускать сервер без GUI"
                              VerticalAlignment="Center"/>
                    <ToggleSwitch Grid.Column="1"
                                  IsChecked="{Binding UseNoGui}"
                                  OnContent=""
                                  OffContent=""
                                  Margin="10,0,0,0"/>
                </Grid>

                <StackPanel Margin="0,5">
                    <TextBlock Text="Выделенная память сервера"
                              VerticalAlignment="Center"/>
                    <Grid RowDefinitions="Auto,Auto" 
                          Margin="0,5">
                        <Slider Grid.Row="0"
                                Minimum="1"
                                Maximum="{Binding MaxServerMemoryGB}"
                                Value="{Binding ServerMemoryGB}"
                                TickFrequency="0.5"
                                IsSnapToTickEnabled="True"/>

                        <Grid Grid.Row="1" 
                              ColumnDefinitions="Auto,*,Auto" 
                              Margin="0,2">
                            <TextBlock Text="1 ГБ"
                                      Grid.Column="0"
                                      Foreground="#808080"
                                      FontSize="12"/>
                            <TextBlock Text="{Binding ServerMemoryGB, StringFormat='{}{0:F1} ГБ'}"
                                      Grid.Column="1"
                                      HorizontalAlignment="Center"
                                      Foreground="#808080"
                                      FontSize="12"/>
                            <TextBlock Text="{Binding MaxServerMemoryGB, StringFormat='{}{0:F1} ГБ'}"
                                      Grid.Column="2"
                                      Foreground="#808080"
                                      FontSize="12"/>
                        </Grid>
                    </Grid>
                </StackPanel>

                <Separator Background="#3d3d3d" 
                           Height="1" 
                           Margin="0,5"/>
                    
                <TextBlock Text="Версия приложения:"
                          Foreground="#808080"/>
                <TextBlock Text="{x:Static constants:AppConstants.AppVersion}"/>
            </StackPanel>
        </Grid>
    </Border>

    <StackPanel Name="UpdateProgressPanel" 
                IsVisible="False">
        <TextBlock Name="StatusText"
                   HorizontalAlignment="Center"
                   Margin="0,5"/>
        <ProgressBar Name="ProgressBar"
                     Maximum="1"
                     Height="4"
                     Margin="0,5"/>
    </StackPanel>
  </Grid>
</Window>
